{"id":"node_modules/node-vibrant/lib/generator/default.js","dependencies":[{"name":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/lib/generator/default.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/src/generator/default.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/christianreindl/Code/fenwick-ui/package.json","includedInParent":true,"mtime":1628361505277},{"name":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/package.json","includedInParent":true,"mtime":499162500000},{"name":"../color","loc":{"line":3,"column":22},"parent":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/lib/generator/default.js","resolved":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/lib/color.js"},{"name":"../util","loc":{"line":4,"column":21},"parent":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/lib/generator/default.js","resolved":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/lib/util.js"},{"name":"lodash/defaults","loc":{"line":5,"column":23},"parent":"/Users/christianreindl/Code/fenwick-ui/node_modules/node-vibrant/lib/generator/default.js","resolved":"/Users/christianreindl/Code/fenwick-ui/node_modules/lodash/defaults.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar color_1 = require(\"../color\");\nvar util_1 = require(\"../util\");\nvar defaults = require(\"lodash/defaults\");\nvar DefaultOpts = {\n    targetDarkLuma: 0.26,\n    maxDarkLuma: 0.45,\n    minLightLuma: 0.55,\n    targetLightLuma: 0.74,\n    minNormalLuma: 0.3,\n    targetNormalLuma: 0.5,\n    maxNormalLuma: 0.7,\n    targetMutesSaturation: 0.3,\n    maxMutesSaturation: 0.4,\n    targetVibrantSaturation: 1.0,\n    minVibrantSaturation: 0.35,\n    weightSaturation: 3,\n    weightLuma: 6.5,\n    weightPopulation: 0.5\n};\nfunction _findMaxPopulation(swatches) {\n    var p = 0;\n    swatches.forEach(function (s) {\n        p = Math.max(p, s.getPopulation());\n    });\n    return p;\n}\nfunction _isAlreadySelected(palette, s) {\n    return palette.Vibrant === s ||\n        palette.DarkVibrant === s ||\n        palette.LightVibrant === s ||\n        palette.Muted === s ||\n        palette.DarkMuted === s ||\n        palette.LightMuted === s;\n}\nfunction _createComparisonValue(saturation, targetSaturation, luma, targetLuma, population, maxPopulation, opts) {\n    function weightedMean() {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            values[_i] = arguments[_i];\n        }\n        var sum = 0;\n        var weightSum = 0;\n        for (var i = 0; i < values.length; i += 2) {\n            var value = values[i];\n            var weight = values[i + 1];\n            sum += value * weight;\n            weightSum += weight;\n        }\n        return sum / weightSum;\n    }\n    function invertDiff(value, targetValue) {\n        return 1 - Math.abs(value - targetValue);\n    }\n    return weightedMean(invertDiff(saturation, targetSaturation), opts.weightSaturation, invertDiff(luma, targetLuma), opts.weightLuma, population / maxPopulation, opts.weightPopulation);\n}\nfunction _findColorVariation(palette, swatches, maxPopulation, targetLuma, minLuma, maxLuma, targetSaturation, minSaturation, maxSaturation, opts) {\n    var max = null;\n    var maxValue = 0;\n    swatches.forEach(function (swatch) {\n        var _a = swatch.getHsl(), s = _a[1], l = _a[2];\n        if (s >= minSaturation && s <= maxSaturation &&\n            l >= minLuma && l <= maxLuma &&\n            !_isAlreadySelected(palette, swatch)) {\n            var value = _createComparisonValue(s, targetSaturation, l, targetLuma, swatch.getPopulation(), maxPopulation, opts);\n            if (max === null || value > maxValue) {\n                max = swatch;\n                maxValue = value;\n            }\n        }\n    });\n    return max;\n}\nfunction _generateVariationColors(swatches, maxPopulation, opts) {\n    var palette = {};\n    // mVibrantSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n    //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n    palette.Vibrant = _findColorVariation(palette, swatches, maxPopulation, opts.targetNormalLuma, opts.minNormalLuma, opts.maxNormalLuma, opts.targetVibrantSaturation, opts.minVibrantSaturation, 1, opts);\n    // mLightVibrantSwatch = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n    //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n    palette.LightVibrant = _findColorVariation(palette, swatches, maxPopulation, opts.targetLightLuma, opts.minLightLuma, 1, opts.targetVibrantSaturation, opts.minVibrantSaturation, 1, opts);\n    // mDarkVibrantSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n    //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n    palette.DarkVibrant = _findColorVariation(palette, swatches, maxPopulation, opts.targetDarkLuma, 0, opts.maxDarkLuma, opts.targetVibrantSaturation, opts.minVibrantSaturation, 1, opts);\n    // mMutedSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n    //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n    palette.Muted = _findColorVariation(palette, swatches, maxPopulation, opts.targetNormalLuma, opts.minNormalLuma, opts.maxNormalLuma, opts.targetMutesSaturation, 0, opts.maxMutesSaturation, opts);\n    // mLightMutedColor = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n    //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n    palette.LightMuted = _findColorVariation(palette, swatches, maxPopulation, opts.targetLightLuma, opts.minLightLuma, 1, opts.targetMutesSaturation, 0, opts.maxMutesSaturation, opts);\n    // mDarkMutedSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n    //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n    palette.DarkMuted = _findColorVariation(palette, swatches, maxPopulation, opts.targetDarkLuma, 0, opts.maxDarkLuma, opts.targetMutesSaturation, 0, opts.maxMutesSaturation, opts);\n    return palette;\n}\nfunction _generateEmptySwatches(palette, maxPopulation, opts) {\n    if (palette.Vibrant === null && palette.DarkVibrant === null && palette.LightVibrant === null) {\n        if (palette.DarkVibrant === null && palette.DarkMuted !== null) {\n            var _a = palette.DarkMuted.getHsl(), h = _a[0], s = _a[1], l = _a[2];\n            l = opts.targetDarkLuma;\n            palette.DarkVibrant = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n        }\n        if (palette.LightVibrant === null && palette.LightMuted !== null) {\n            var _b = palette.LightMuted.getHsl(), h = _b[0], s = _b[1], l = _b[2];\n            l = opts.targetDarkLuma;\n            palette.DarkVibrant = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n        }\n    }\n    if (palette.Vibrant === null && palette.DarkVibrant !== null) {\n        var _c = palette.DarkVibrant.getHsl(), h = _c[0], s = _c[1], l = _c[2];\n        l = opts.targetNormalLuma;\n        palette.Vibrant = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n    }\n    else if (palette.Vibrant === null && palette.LightVibrant !== null) {\n        var _d = palette.LightVibrant.getHsl(), h = _d[0], s = _d[1], l = _d[2];\n        l = opts.targetNormalLuma;\n        palette.Vibrant = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n    }\n    if (palette.DarkVibrant === null && palette.Vibrant !== null) {\n        var _e = palette.Vibrant.getHsl(), h = _e[0], s = _e[1], l = _e[2];\n        l = opts.targetDarkLuma;\n        palette.DarkVibrant = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n    }\n    if (palette.LightVibrant === null && palette.Vibrant !== null) {\n        var _f = palette.Vibrant.getHsl(), h = _f[0], s = _f[1], l = _f[2];\n        l = opts.targetLightLuma;\n        palette.LightVibrant = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n    }\n    if (palette.Muted === null && palette.Vibrant !== null) {\n        var _g = palette.Vibrant.getHsl(), h = _g[0], s = _g[1], l = _g[2];\n        l = opts.targetMutesSaturation;\n        palette.Muted = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n    }\n    if (palette.DarkMuted === null && palette.DarkVibrant !== null) {\n        var _h = palette.DarkVibrant.getHsl(), h = _h[0], s = _h[1], l = _h[2];\n        l = opts.targetMutesSaturation;\n        palette.DarkMuted = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n    }\n    if (palette.LightMuted === null && palette.LightVibrant !== null) {\n        var _j = palette.LightVibrant.getHsl(), h = _j[0], s = _j[1], l = _j[2];\n        l = opts.targetMutesSaturation;\n        palette.LightMuted = new color_1.Swatch(util_1.hslToRgb(h, s, l), 0);\n    }\n}\nvar DefaultGenerator = function (swatches, opts) {\n    opts = defaults({}, opts, DefaultOpts);\n    var maxPopulation = _findMaxPopulation(swatches);\n    var palette = _generateVariationColors(swatches, maxPopulation, opts);\n    _generateEmptySwatches(palette, maxPopulation, opts);\n    return palette;\n};\nexports.default = DefaultGenerator;\n"},"sourceMaps":{"js":{"version":3,"file":"default.js","sourceRoot":"","sources":["../../src/generator/default.ts"],"names":[],"mappings":"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","sourcesContent":["import { Swatch, Palette } from '../color'\nimport { Generator } from '../typing'\nimport { hslToRgb } from '../util'\nimport defaults = require('lodash/defaults')\n\ninterface DefaultGeneratorOptions {\n  targetDarkLuma: number,\n  maxDarkLuma: number,\n  minLightLuma: number,\n  targetLightLuma: number,\n  minNormalLuma: number,\n  targetNormalLuma: number,\n  maxNormalLuma: number,\n  targetMutesSaturation: number,\n  maxMutesSaturation: number,\n  targetVibrantSaturation: number,\n  minVibrantSaturation: number,\n  weightSaturation: number,\n  weightLuma: number,\n  weightPopulation: number\n}\n\nconst DefaultOpts: DefaultGeneratorOptions = {\n  targetDarkLuma: 0.26,\n  maxDarkLuma: 0.45,\n  minLightLuma: 0.55,\n  targetLightLuma: 0.74,\n  minNormalLuma: 0.3,\n  targetNormalLuma: 0.5,\n  maxNormalLuma: 0.7,\n  targetMutesSaturation: 0.3,\n  maxMutesSaturation: 0.4,\n  targetVibrantSaturation: 1.0,\n  minVibrantSaturation: 0.35,\n  weightSaturation: 3,\n  weightLuma: 6.5,\n  weightPopulation: 0.5\n}\n\nfunction _findMaxPopulation (swatches: Array<Swatch>): number {\n  let p = 0\n\n  swatches.forEach((s) => {\n    p = Math.max(p, s.getPopulation())\n  })\n\n  return p\n}\n\nfunction _isAlreadySelected (palette: Palette, s: Swatch): boolean {\n  return palette.Vibrant === s ||\n    palette.DarkVibrant === s ||\n    palette.LightVibrant === s ||\n    palette.Muted === s ||\n    palette.DarkMuted === s ||\n    palette.LightMuted === s\n}\n\nfunction _createComparisonValue (\n  saturation: number, targetSaturation: number,\n  luma: number, targetLuma: number,\n  population: number, maxPopulation: number, opts: DefaultGeneratorOptions): number {\n  function weightedMean (...values: number[]) {\n    let sum = 0\n    let weightSum = 0\n    for (let i = 0; i < values.length; i += 2) {\n      let value = values[i]\n      let weight = values[i + 1]\n      sum += value * weight\n      weightSum += weight\n    }\n\n    return sum / weightSum\n  }\n\n  function invertDiff (value: number, targetValue: number): number {\n    return 1 - Math.abs(value - targetValue)\n  }\n\n  return weightedMean(\n    invertDiff(saturation, targetSaturation), opts.weightSaturation,\n    invertDiff(luma, targetLuma), opts.weightLuma,\n    population / maxPopulation, opts.weightPopulation\n  )\n}\n\nfunction _findColorVariation (palette: Palette, swatches: Array<Swatch>, maxPopulation: number,\n  targetLuma: number,\n  minLuma: number,\n  maxLuma: number,\n  targetSaturation: number,\n  minSaturation: number,\n  maxSaturation: number,\n  opts: DefaultGeneratorOptions): Swatch {\n  let max: Swatch | null = null\n  let maxValue = 0\n\n  swatches.forEach((swatch) => {\n    let [, s, l] = swatch.getHsl()\n\n    if (s >= minSaturation && s <= maxSaturation &&\n      l >= minLuma && l <= maxLuma &&\n      !_isAlreadySelected(palette, swatch)\n    ) {\n      let value = _createComparisonValue(s, targetSaturation, l, targetLuma, swatch.getPopulation(), maxPopulation, opts)\n\n      if (max === null || value > maxValue) {\n        max = swatch\n        maxValue = value\n      }\n    }\n  })\n\n  return max!\n}\n\nfunction _generateVariationColors (swatches: Array<Swatch>, maxPopulation: number, opts: DefaultGeneratorOptions): Palette {\n  let palette: Palette = {}\n  // mVibrantSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n  palette.Vibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mLightVibrantSwatch = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n  palette.LightVibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mDarkVibrantSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n  palette.DarkVibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mMutedSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n  palette.Muted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  // mLightMutedColor = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n  palette.LightMuted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  // mDarkMutedSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n  palette.DarkMuted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  return palette\n}\n\nfunction _generateEmptySwatches (palette: Palette, maxPopulation: number, opts: DefaultGeneratorOptions): void {\n  if (palette.Vibrant === null && palette.DarkVibrant === null && palette.LightVibrant === null) {\n    if (palette.DarkVibrant === null && palette.DarkMuted !== null) {\n      let [h, s, l] = palette.DarkMuted!.getHsl()\n      l = opts.targetDarkLuma\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (palette.LightVibrant === null && palette.LightMuted !== null) {\n      let [h, s, l] = palette.LightMuted!.getHsl()\n      l = opts.targetDarkLuma\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n  }\n  if (palette.Vibrant === null && palette.DarkVibrant !== null) {\n    let [h, s, l] = palette.DarkVibrant!.getHsl()\n    l = opts.targetNormalLuma\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n  } else if (palette.Vibrant === null && palette.LightVibrant !== null) {\n    let [h, s, l] = palette.LightVibrant!.getHsl()\n    l = opts.targetNormalLuma\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (palette.DarkVibrant === null && palette.Vibrant !== null) {\n    let [h, s, l] = palette.Vibrant!.getHsl()\n    l = opts.targetDarkLuma\n    palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (palette.LightVibrant === null && palette.Vibrant !== null) {\n    let [h, s, l] = palette.Vibrant!.getHsl()\n    l = opts.targetLightLuma\n    palette.LightVibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (palette.Muted === null && palette.Vibrant !== null) {\n    let [h, s, l] = palette.Vibrant!.getHsl()\n    l = opts.targetMutesSaturation\n    palette.Muted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (palette.DarkMuted === null && palette.DarkVibrant !== null) {\n    let [h, s, l] = palette.DarkVibrant!.getHsl()\n    l = opts.targetMutesSaturation\n    palette.DarkMuted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (palette.LightMuted === null && palette.LightVibrant !== null) {\n    let [h, s, l] = palette.LightVibrant!.getHsl()\n    l = opts.targetMutesSaturation\n    palette.LightMuted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n}\n\nconst DefaultGenerator: Generator = (swatches: Array<Swatch>, opts?: DefaultGeneratorOptions): Palette => {\n  opts = <DefaultGeneratorOptions>defaults({}, opts, DefaultOpts)\n  let maxPopulation = _findMaxPopulation(swatches)\n\n  let palette = _generateVariationColors(swatches, maxPopulation, opts)\n  _generateEmptySwatches(palette, maxPopulation, opts)\n\n  return palette\n}\n\nexport default DefaultGenerator\n"]}},"error":null,"hash":"50a80999f9ab329aab8ba2f42b3b332b","cacheData":{"env":{}}}