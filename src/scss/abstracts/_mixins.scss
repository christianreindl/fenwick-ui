// -----------------------------------------------------------------------------
// This file contains global component-independent mixins.
// -----------------------------------------------------------------------------

@mixin disabled() {
    &[disabled] {
        opacity: 0.3;
        cursor: not-allowed;
    }
}

@mixin appearance-reset() {
    -webkit-appearance: none;
    -moz-appearance: none;
}

@mixin breakpoint-style(
    $rule,
    $breakpoint-style-map,
    $style-breakpoints: $breakpoints
) {
    @each $breakpoint, $breakpoint-style in $breakpoint-style-map {
        @if $breakpoint == null {
            #{$rule}: $breakpoint-style;
        } @else {
            @if map-has-key($style-breakpoints, $breakpoint) {
                $breakpoint: map-get($style-breakpoints, $breakpoint);
            }
            @media screen and (min-width: $breakpoint) {
                #{$rule}: $breakpoint-style;
            }
        }
    }
}

@mixin dashed-background($color: currentColor, $height: 1px) {
    background-repeat: repeat-x;
    background-position: center;
    background-color: transparent;
    background-size: 4px $height;
    background-image: linear-gradient(to right, $color 33%, transparent 0%);
}

@mixin dashed-background-vertical($color: currentColor, $width: 1px) {
    background-repeat: repeat-y;
    background-position: center;
    background-color: transparent;
    background-size: $width 4px;
    background-image: linear-gradient(to bottom, $color 33%, transparent 0%);
}

@mixin ui-underline($color: currentColor, $height: 1px) {
    position: relative;

    &::before,
    &::after {
        left: 0;
        bottom: 0;
        width: 100%;
        height: $height;
        position: absolute;
        content: "";
    }

    &::before {
        @include dashed-background($color, $height);
    }

    &::after {
        transform: scaleX(0);
        transform-origin: left;
        background-color: $color;
        transition: transform 0.35s ease;
    }

    &:hover,
    &:focus {
        &::after {
            transform: scaleX(1);
        }
    }

    &:focus-within {
        &::after {
            transform: scaleX(1);
        }
    }

}

@mixin dotted-background($theme: "light", $size: "default") {
    background-repeat: repeat;
    background-image: url("/src/img/pattern_dots_onlight.svg");

    @if ($size == "small") {
        background-size: 4px;
    } @else {
        background-size: 8px;
    }

    .dark & {
        background-image: url("/src/img/pattern_dots_ondark.svg");
    }
}

@mixin card-border-line($position: "top") {
    position: relative;

    &::before {
        @include dashed-background(
            $color-ui-divider-dotted-onlight,
            $size-ui-dotted-line-large
        );
        left: 0;
        width: 100%;
        content: "";
        #{$position}: 0;
        position: absolute;
        height: $size-ui-dotted-line-large;
    }

    .dark &::before {
        @include dashed-background(
            $color-ui-divider-dotted-ondark,
            $size-ui-dotted-line-large
        );
    }
}

@mixin backdrop-blur($color-backdrop: $color-ui-megamenu-background, $color-fallback: $color-fill-gray-darkest) {
    background-color: $color-fallback;

    @supports (backdrop-filter: $filter-navigation-background) or
        (-webkit-backdrop-filter: $filter-navigation-background) {
        background-color: $color-backdrop;
        backdrop-filter: $filter-navigation-background;
        -webkit-backdrop-filter: $filter-navigation-background;
    }
}
